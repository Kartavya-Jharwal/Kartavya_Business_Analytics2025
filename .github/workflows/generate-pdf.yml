name: Generate PDF Reports (repo-wide)

on:
  push:
    branches: [main]
    paths:
      - '**/*.ipynb'
      - 'A1/templates/**'
      - '.github/workflows/generate-pdf.yml'
  pull_request:
    branches: [main]
    paths:
      - '**/*.ipynb'
  workflow_dispatch:

jobs:
  generate-pdfs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install UV
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install dependencies
        run: uv sync

      - name: Cache system dependencies
        id: cache-system-deps
        uses: actions/cache@v4
        with:
          path: |
            /usr/bin/pandoc
            /usr/bin/wkhtmltopdf
            /usr/share/texlive
            /usr/bin/xelatex
          key: ${{ runner.os }}-system-deps-v1

      - name: Install system dependencies for PDF
        if: steps.cache-system-deps.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pandoc \
            texlive-xetex \
            texlive-fonts-recommended \
            texlive-plain-generic \
            wkhtmltopdf

      - name: Find and convert notebooks
        run: |
          set -euo pipefail
          
          # Find all notebooks excluding hidden directories
          find . -type f -name '*.ipynb' -not -path '*/\.*' | while IFS= read -r notebook; do
            # Remove leading ./
            nb_path="${notebook#./}"
            nb_dir="$(dirname "$nb_path")"
            nb_name="$(basename "$nb_path" .ipynb)"
            
            echo "ðŸ““ Processing: $nb_path"
            
            # Create outputs directory in the same location as the notebook
            mkdir -p "$nb_dir"
            
            # Determine if we should use custom template (only for A1 notebooks)
            TEMPLATE_ARG=""
            if [[ "$nb_path" == A1/* ]]; then
              TEMPLATE_ARG="--template A1/templates/custom_report.tpl"
            fi
            
            # Convert to HTML
            echo "  â†’ Generating HTML..."
            if uv run jupyter nbconvert \
              --to html \
              $TEMPLATE_ARG \
              --output-dir "$nb_dir" \
              --output "${nb_name}.html" \
              "$nb_path"; then
              echo "  âœ“ HTML created: ${nb_dir}/${nb_name}.html"
            else
              echo "  âœ— HTML conversion failed"
            fi
            
            # Convert to PDF (try webpdf first, fallback to wkhtmltopdf)
            echo "  â†’ Generating PDF..."
            if uv run jupyter nbconvert \
              --to webpdf \
              $TEMPLATE_ARG \
              --output-dir "$nb_dir" \
              --output "${nb_name}.pdf" \
              "$nb_path"; then
              echo "  âœ“ PDF created: ${nb_dir}/${nb_name}.pdf"
            elif [[ -f "${nb_dir}/${nb_name}.html" ]]; then
              echo "  â†’ Fallback: Using wkhtmltopdf..."
              if wkhtmltopdf \
                --enable-local-file-access \
                --page-size A4 \
                --margin-top 15mm \
                --margin-bottom 15mm \
                --margin-left 15mm \
                --margin-right 15mm \
                "${nb_dir}/${nb_name}.html" \
                "${nb_dir}/${nb_name}.pdf"; then
                echo "  âœ“ PDF created via wkhtmltopdf: ${nb_dir}/${nb_name}.pdf"
              else
                echo "  âœ— PDF conversion failed"
              fi
            else
              echo "  âœ— PDF conversion failed (no HTML available)"
            fi
            
            echo ""
          done

      - name: Upload generated artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: notebook-reports-${{ github.sha }}
          path: |
            **/*.html
            **/*.pdf
          retention-days: 90
          if-no-files-found: warn

      - name: Create release on main
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        continue-on-error: true
        uses: softprops/action-gh-release@v2
        with:
          tag_name: reports-${{ github.run_number }}
          name: ðŸ“Š Notebook Reports - Run ${{ github.run_number }}
          body: |
            ## ðŸ““ Automated Notebook Reports
            
            **Commit:** ${{ github.sha }}
            **Generated:** ${{ github.event.head_commit.timestamp }}
            **Notebooks processed:** All `.ipynb` files in repository
            
            ### ðŸ“¥ Download
            Check the artifacts section above or the attached files below.
          files: |
            **/*.html
            **/*.pdf
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
