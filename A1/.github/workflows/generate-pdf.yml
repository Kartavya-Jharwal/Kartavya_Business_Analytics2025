name: Generate PDF Report

on:
  push:
    branches: [ main ]
    # keep the path filter so the workflow is eligible, but only run the job
    # when assignment.ipynb was added or modified in the head commit (avoids running
    # for unrelated commits). Workflow can still be manually dispatched.
    paths:
      - 'A1/assignment.ipynb'
      - 'A1/templates/**'
      - '.github/workflows/generate-pdf.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'A1/assignment.ipynb'
  workflow_dispatch:  # Allow manual trigger

jobs:
  generate-pdf:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
      
    # Only run the job automatically if the head commit added/modified the notebook.
    # This avoids the job running on every push that doesn't touch the notebook.
    # Manual dispatch and PR events are still allowed.
    - name: Determine whether to continue
      id: check_changes
      run: |
        echo "head_event=${{ github.event_name }}" > check_change.txt
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "continue=true" > continue.txt
          exit 0
        fi
        # For push events, inspect the head commit added/modified files
        if [ "${{ github.event_name }}" = "push" ]; then
          ADDED="${{ toJson(github.event.head_commit.added) }}"
          MODIFIED="${{ toJson(github.event.head_commit.modified) }}"
          echo "added=$ADDED" > added.txt
          echo "modified=$MODIFIED" > modified.txt
          echo "$ADDED $MODIFIED" | grep -q 'A1/assignment.ipynb' && echo "continue=true" > continue.txt || echo "continue=false" > continue.txt
        else
          echo "continue=true" > continue.txt
        fi
        cat continue.txt

    - name: Stop job if notebook not changed
      if: ${{ always() && steps.check_changes.outputs == '' }}
      run: |
        # If continue.txt exists and contains false, exit with a special code to skip
        if [ -f continue.txt ]; then
          CONT=$(cat continue.txt)
          if [ "$CONT" = "continue=false" ]; then
            echo "No notebook change detected in head commit — skipping PDF generation.";
            exit 0
          fi
        fi
      
    - name: Install UV (astral-sh/setup-uv)
      uses: astral-sh/setup-uv@v6
      with:
        version: "0.9.3"
        enable-cache: true

    - name: Set up Python and install dependencies
      working-directory: A1
      run: |
        # Install Python via uv to respect project pins, then sync deps deterministically
        uv python install || echo "uv python install failed; ensure uv is available"
        uv sync --locked --all-extras --dev

    - name: Install system dependencies for PDF (pandoc)
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc || true

    - name: Install minimal system dependency (wkhtmltopdf fallback)
      run: |
        sudo apt-get update
        sudo apt-get install -y wkhtmltopdf || true

    - name: Convert assignment notebook (same-directory outputs)
      working-directory: A1
      run: |
        set -o pipefail
        echo "📗 Policy: Outputs will be written to the same directory as assignment.ipynb"

        # Preferred: nbconvert webpdf (via uv run)
        # Use output basename to avoid double-extension in some nbconvert versions
        if uv run jupyter nbconvert --to webpdf --template templates/custom_report.tpl --output assignment_report assignment.ipynb; then
          echo "  ✓ PDF created: A1/assignment_report.pdf"
        else
          echo "  → webpdf failed; generating HTML and falling back to wkhtmltopdf"
          uv run jupyter nbconvert --to html --template templates/custom_report.tpl --output assignment_report.html assignment.ipynb
          if wkhtmltopdf --enable-local-file-access --page-size A4 --margin-top 15mm --margin-bottom 15mm --margin-left 15mm --margin-right 15mm A1/assignment_report.html A1/assignment_report.pdf; then
            echo "  ✓ PDF created via wkhtmltopdf: A1/assignment_report.pdf"
          else
            echo "  ✗ PDF creation failed"
          fi
        fi

    - name: Upload HTML artifact
      uses: actions/upload-artifact@v4
      with:
        name: assignment-report-html
        path: A1/assignment_report.html
        retention-days: 90

    - name: Upload PDF artifact
      uses: actions/upload-artifact@v4
      with:
        name: assignment-report-pdf
        path: A1/assignment_report.pdf
        retention-days: 90

    - name: Create outputs directory for release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: mkdir -p release-outputs

    - name: Copy files for release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        cp A1/assignment_report.html release-outputs/ || true
        cp A1/assignment_report.pdf release-outputs/ || true
        
    - name: Generate timestamp
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      id: timestamp
      run: echo "date=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
      
    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: report-${{ steps.timestamp.outputs.date }}
        name: Assignment Report ${{ steps.timestamp.outputs.date }}
        body: |
          Automated PDF and HTML report generation from assignment.ipynb
          
          **Generated:** ${{ steps.timestamp.outputs.date }}
          **Commit:** ${{ github.sha }}
          
          ### Downloads:
          - 📄 **assignment_report.pdf** - PDF version with beautiful styling
          - 🌐 **assignment_report.html** - Interactive HTML version
        files: |
          release-outputs/assignment_report.pdf
          release-outputs/assignment_report.html
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
